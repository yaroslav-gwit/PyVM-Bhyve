table <private-ranges> __ 0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16          \
                 172.16.0.0/12 192.0.0.0/24 192.0.0.0/29 192.0.2.0/24 192.88.99.0/24    \
                 192.168.0.0/16 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24            \
                 240.0.0.0/4 255.255.255.255/32 ___


set skip on lo0
scrub in all fragment reassemble max-mss 1440


### NAT from internal networks ###
nat on {{ external_interface }} from __{{ host_internal_switch_subnet }}___ to any -> {{ external_interface }}


### NAT into internal networks examples ###
#rdr pass on {{ external_interface }} proto __ tcp udp ___ from any to EXTERNAL_INTERFACE_IP_HERE port 28967 -> 10.0.0.3 port 28967
#rdr pass on {{ external_interface }} proto tcp from any to EXTERNAL_INTERFACE_IP_HERE port 14000 -> 10.0.0.3 port 14002
#rdr pass on {{ external_interface }} proto tcp from any to 1.12.13.14 port __ 80 443 ___ -> 10.0.0.10 #10.0.0.2


### AntiSpoof Rule ###
antispoof quick for {{ external_interface }}


#block in quick log on egress from <private-ranges>
#block return out quick on egress to <private-ranges>
block in all
pass out all keep state


### Allow internal NAT networks to go out examples ###
#pass in proto tcp to port 5900:5950 keep state
#pass in quick inet proto __ tcp udp icmp ___ from {{ host_internal_switch_subnet }} to any # Uncomment this rule to allow any traffic out
pass in quick inet proto __ udp ___ from {{ host_internal_switch_subnet }} to {{ host_internal_switch_address }} port 53
block in quick inet from {{ host_internal_switch_subnet }} to <private-ranges>
pass in quick inet proto __ tcp udp icmp ___ from {{ host_internal_switch_subnet }} to any


### Allow some connections IN + examples ###
pass in quick on __{{ external_interface }}___ inet proto icmp all # allow PING in
pass in quick on __{{ external_interface }}___ proto tcp to port 22 keep state #ALLOW_SSH_ACCESS_TO_HOST
#pass in proto tcp to port 80 keep state #HTTP_NGINX_PROXY
#pass in proto tcp to port 443 keep state #HTTPS_NGINX_PROXY